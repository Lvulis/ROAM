% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_shoreline.R
\name{extract_shoreline}
\alias{extract_shoreline}
\title{Extract Shoreline vector}
\usage{
extract_shoreline(
  map,
  theta = 45,
  card = NULL,
  NA_buff = NULL,
  pixres = NULL,
  outCRS = NULL,
  xoff = NULL,
  yoff = NULL
)
}
\arguments{
\item{map}{numeric or stars: OAM map to be processed}

\item{theta}{numeric: critical value at which to define a shoreline}

\item{card}{integer: Cardinal direction at which to start walking (see details)}

\item{NA_buff}{integer: indices to remove before walking (see details)}

\item{pixres}{numeric: pixel resolution. Shouldn't be passed if passing georeferenced image}

\item{outCRS}{st_crs: coordinate reference system of output geometry. Shouldn't be passed if passing georeferenced image}

\item{xoff}{numeric: offset value to add to x coordinates. Shouldn't be passed if passing georeferenced image}

\item{yoff}{numeric: offset value to add to y coordinates. Shouldn't be passed if passing georeferenced image}
}
\value{
\code{sf} object storing the shoreline vector.
}
\description{
Extract a shoreline vector
}
\details{
This function is used to define a continuous shoreline vector (i.e. linestring geometry) separating the subaerial delta from the subaqueous delta & the ocean.
By definition, a continuous shoreline vector has an ordered set of coordinates, which is useful for conducting certain analyses, e.g. the spectral analyses described in Vulis et al., ($DATE). A shoreline vector is also necessary for the the Python package RivGraph which is used to analyze delta channel networks.
As the shoreline is defined at the pixel scale, it is often rough and ragged. This causes the typical vectorization (polygonization) approaches implemented in the \code{stars} and \code{sf} space to fail. To overcome this, a "walker" approach, wherein the pixels are sorted by walking along the shoreline.
The \code{card} argument specifies what position along the edge of the image to start walking from, and takes on values from 1 to 16 which correspond to the following locations:
\subsection{NW = 1, N = 2.... NW-W = 16}{

It is highly recommended to pass a georeferenced input image to \code{map} and avoid any possible issues.
}
}
\examples{
\dontrun{
fn_OAM = system.file("extdata", "SaoFrancisco_OAM.tif", package = "ROAM")
OAM_map = stars::read_stars(fn_OAM)
shoreline = extract_shoreline(OAM_map, theta = 45, card = 13, NA_buff = NULL,
pixres= NULL, outCRS = NULL)
}
}
